// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 9.1.0
// Project name: SquareLine_Project

#include "ui.h"
#include "../CommonData.h"
#include "../CommonLibrary.h"

void Init()
{
    // TODO: Updates the screen on first startup

    sys_gui::Brightness.SetValue(100);
    lv_slider_set_value(ui_Slider1, sys_gui::Brightness.GetValue(), LV_ANIM_OFF);
}

void AutoUpdate()
{
    /* TODO: Check state of shared data and perform screen update
             Reset state function is recommended after screen updating
             This function is running continuously
    */

    if (Button2Value.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, std::to_string(Button2Value.GetValue()).c_str());
    }

    if (SliderValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, std::to_string(SliderValue.GetValue()).c_str());
    }

    if (ArcValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, std::to_string(ArcValue.GetValue()).c_str());
    }

    if (CheckboxValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, std::to_string(CheckboxValue.GetValue()).c_str());
    }

    if (DropdownValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, DropdownValue.GetValue().c_str());
    }

    if (SwitchValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, std::to_string(SwitchValue.GetValue()).c_str());
    }

    if (RollerValue.GetState())
    {
        _ui_label_set_property(ui_Label1, _UI_LABEL_PROPERTY_TEXT, RollerValue.GetValue().c_str());
    }
}

void OnSliderChange(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    SliderValue.SetValue(lv_slider_get_value(ui_Slider1));
    sys_gui::Brightness.SetValue(lv_slider_get_value(ui_Slider1));
}

void OnArcChange(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    ArcValue.SetValue(lv_arc_get_value(ui_Arc1));
}

void OnCheckboxClick(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    CheckboxValue.SetValue(lv_obj_get_state(ui_Checkbox1));
}

void OnDropdownChange(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    char buf[100] = { 0 };
    lv_dropdown_get_selected_str(ui_Dropdown1, buf, sizeof(buf));
    DropdownValue.SetValue(buf);
}

void OnSwitchClick(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    SwitchValue.SetValue(lv_obj_get_state(ui_Switch1));
}

void OnRollerChange(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    char buf[100] = { 0 };
    lv_roller_get_selected_str(ui_Roller1, buf, sizeof(buf));
    RollerValue.SetValue(buf);
}

void OnButtonNormalClick(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    Button2Value.SetValue(1);
    sys_gui::StrikeState.SetValue(true);
}

void OnButtonToggleClick(lv_event_t* e)
{
    // TODO: Perform logic processing related to the component

    Button2Value.SetValue(lv_obj_get_state(ui_Button2));
}
