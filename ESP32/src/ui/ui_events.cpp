// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.5.0
// LVGL version: 9.1.0
// Project name: SquareLine_Project

#ifdef _WIN64
#include <iostream>
#endif
#include "ui.h"
#include "../CommonData.h"
#include "../CommonLibrary.h"
#include "../CommonService.h"

std::vector<lv_obj_t*> listWire;
std::vector<lv_obj_t*> listSelect;

void Init()
{
    // Brightness
    sys_gui::Brightness.SetValue(100);
    lv_slider_set_value(ui_sldBrightness, sys_gui::Brightness.GetValue(), LV_ANIM_OFF);

    // Wire list
    listWire = { ui_barWire1, ui_barWire2, ui_barWire3, ui_barWire4, ui_barWire5, ui_barWire6 };
    listSelect = { ui_swSelect1, ui_swSelect2, ui_swSelect3, ui_swSelect4, ui_swSelect5, ui_swSelect6 };

#ifndef UNIT_TEST
    // Create random color wire list
    CreateRandomWireList();
#endif

    // Calculate correct wire
    WireModule();

    // Set color to GUI wires
    auto mumOfWire = WireColorList.GetValue().size();
    for (uint8_t i = 0; i < listWire.size(); i++)
    {
        if (i < mumOfWire)
        {
            lv_obj_set_style_bg_color(listWire.at(i), lv_color_hex(mapColor[WireColorList.GetValue().at(i)]), LV_PART_INDICATOR | LV_STATE_DEFAULT);
        }
        else
        {
            lv_obj_add_state(listWire.at(i), LV_STATE_DISABLED);
            lv_obj_add_state(listSelect.at(i), LV_STATE_DISABLED);
            lv_obj_clear_state(listSelect.at(i), LV_STATE_CHECKED);
        }
    }

#ifdef _WIN64
    debug_println("Correct wire index: " + std::to_string((uint8_t)CorrectWireIndex.GetValue()));
#endif
}

void AutoUpdate()
{
    if (sys_gui::SuccessState.GetState())
    {
        if (sys_gui::SuccessState.GetValue() != INCORRECT)
        {
            lv_obj_clear_flag(ui_imgResult, LV_OBJ_FLAG_HIDDEN);

            if (sys_gui::SuccessState.GetValue() == STATE_UNCHECK)
            {
                lv_obj_add_state(ui_imgResult, LV_STATE_DISABLED);
            }
            else if (sys_gui::SuccessState.GetValue() == STATE_CHECKED)
            {
                lv_obj_add_state(ui_imgResult, LV_STATE_CHECKED);
            }
        }
    }
}

void OnBrightnessChange(lv_event_t* e)
{
    sys_gui::Brightness.SetValue(lv_slider_get_value(ui_sldBrightness));
}

void OnWireSelect(lv_event_t* e)
{
    if (std::find(listSelect.begin(), listSelect.end(), e->current_target) - listSelect.begin() == (uint8_t)CorrectWireIndex.GetValue() - 1)
    {
        sys_gui::SuccessState.SetValue(STATE_CHECKED);

#ifndef UNIT_TEST
        // Send success to Host
        JsonDocument jsonDocIn;
#ifdef _WIN64
        jsonDocIn["module"] = CLIENT_NAME_FOR_JSON;
#else
        jsonDocIn["module"] = CLIENT_NAME;
#endif
        CommonSendRequestWithData(WM_SUCCESSSTATE_SET, jsonDocIn);
#endif
    }
    else
    {
#ifndef UNIT_TEST
        // Send error to Host
        CommonSendRequest(WM_STRIKESTATE_SET);
#endif
    }
}
